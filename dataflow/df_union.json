{
	"name": "df_union",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "InputOrderDataset",
						"type": "DatasetReference"
					},
					"name": "OrderCSV1"
				},
				{
					"dataset": {
						"referenceName": "InputOrderDataset",
						"type": "DatasetReference"
					},
					"name": "OrderDetails2"
				},
				{
					"dataset": {
						"referenceName": "InputOrderDataset",
						"type": "DatasetReference"
					},
					"name": "OrderDetails3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "OutputSqlOrders",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "union1"
				},
				{
					"name": "union2"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['order_details.csv']) ~> OrderCSV1",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['order_details_2.csv']) ~> OrderDetails2",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     wildcardPaths:['order_details_3.csv']) ~> OrderDetails3",
				"OrderCSV1, OrderDetails2 union(byName: true)~> union1",
				"union1, OrderDetails3 union(byName: true)~> union2",
				"union2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          order_details_id as integer,",
				"          order_id as integer,",
				"          order_date as date,",
				"          order_time as timestamp,",
				"          item_id as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}